import Link from 'next/link';
import { getCategoryById, getSubCategoryById } from '@/lib/menuData';
import { ChevronLeft, ChevronRight, Coffee, Star, Utensils, Home } from 'lucide-react';
import { notFound } from 'next/navigation';
import Navigation from '@/components/Navigation';
import Footer from '@/components/Footer';
import { getAllCategories } from '@/lib/menuData';
import DrinkCard from '@/components/DrinkCard';

/**
 * Generate static params for all menu subcategories
 * This ensures all subcategory pages are pre-built at build time
 * Following Next.js best practices for static exports
 */
export async function generateStaticParams() {
  const categories = getAllCategories();
  const params = [];
  
  // Generate params for all category-subcategory combinations
  // This ensures all subcategory pages are generated at build time
  for (const category of categories) {
    for (const subCategory of category.subCategories) {
      params.push({
        category: category.id,
        subcategory: subCategory.id,
      });
    }
  }
  
  return params;
}

export default async function SubCategoryPage({ params }: { params: Promise<{ category: string; subcategory: string }> }) {
  const { category: categoryId, subcategory: subCategoryId } = await params;
  
  const category = getCategoryById(categoryId);
  const subCategory = getSubCategoryById(categoryId, subCategoryId);
  const allCategories = getAllCategories();

  if (!category || !subCategory) {
    notFound();
  }

  const getCategoryIcon = (categoryName: string) => {
    switch (categoryName.toLowerCase()) {
      case 'drinks':
        return <Coffee className="w-5 h-5" />;
      case 'food':
        return <Utensils className="w-5 h-5" />;
      case 'at home coffee':
        return <Home className="w-5 h-5" />;
      default:
        return <Coffee className="w-5 h-5" />;
    }
  };

  return (
    <main className="page-transition loaded">
      <Navigation />
      <div className="min-h-screen bg-elite-cream">
      {/* Header */}
      <div className="bg-elite-burgundy text-elite-cream py-8">
        <div className="max-w-7xl mx-auto px-6">

          {/* Subcategory Header */}
          <div className="flex items-center gap-4 mb-6">
            <div className="text-4xl">
              {getCategoryIcon(category.name)}
            </div>
            <div>
              <h1 className="font-calistoga text-4xl md:text-5xl mb-2">
                {subCategory.name}
              </h1>
            </div>
          </div>

          {/* Back Button */}
          <Link
            href={`/menu/${category.id}`}
            className="inline-flex items-center gap-2 bg-elite-cream text-elite-burgundy px-6 py-3 rounded-full font-cabin font-semibold transition-all duration-300 hover:bg-elite-light-cream hover:scale-105"
            prefetch={true}
          >
            <ChevronLeft className="w-4 h-4" />
            Back to {category.name}
          </Link>
        </div>
      </div>

      {/* Main Content */}
      <div className="max-w-7xl mx-auto px-6 py-12">
        <div className="flex flex-col lg:flex-row gap-8">
          {/* Left Side Navigation */}
          <div className="lg:w-64 flex-shrink-0">
            <div className="bg-white rounded-2xl shadow-xl border border-elite-burgundy/10 p-6 sticky top-6 max-h-[calc(100vh-3rem)] overflow-y-auto sidebar-scroll">
              {/* Sidebar Header */}
              <div className="mb-6 pb-4 border-b border-elite-burgundy/20">
                <h2 className="font-calistoga text-elite-burgundy text-xl font-bold mb-1">
                  Categories
                </h2>
                <p className="font-cabin text-elite-black/70 text-xs">
                  Navigate through our menu
                </p>
              </div>
              
              {/* Main Categories */}
              <div className="space-y-1 mb-6">
                {allCategories.map((cat, index) => (
                  <div key={cat.id}>
                    <Link
                      href={cat.comingSoon ? '#' : `/menu/${cat.id}`}
                      className={`group sidebar-item flex items-center gap-2 p-3 rounded-xl transition-all duration-300 border ${
                        cat.id === categoryId
                          ? 'bg-elite-burgundy text-elite-cream shadow-lg border-elite-burgundy'
                          : cat.comingSoon
                          ? 'bg-elite-dark-cream text-elite-black/50 cursor-not-allowed border-elite-dark-cream'
                          : 'bg-white text-elite-black hover:bg-elite-burgundy hover:text-elite-cream hover:shadow-lg hover:scale-102 border-elite-burgundy/20 hover:border-elite-burgundy'
                      }`}
                      prefetch={!cat.comingSoon}
                    >
                      <span className="text-lg">{cat.icon}</span>
                      <span className="font-cabin font-medium text-sm">{cat.name}</span>
                      {cat.comingSoon && (
                        <span className="ml-auto text-xs bg-elite-burgundy/40 text-elite-cream/90 px-2 py-0.5 rounded-full font-medium">
                          Soon
                        </span>
                      )}
                    </Link>
                    {index < allCategories.length - 1 && (
                      <div className="h-px bg-elite-burgundy/10 my-3"></div>
                    )}
                  </div>
                ))}
              </div>

              {/* Subcategories Section */}
              {!category.comingSoon && category.subCategories.length > 0 && (
                <div className="mb-6">
                  <div className="mb-4 pb-3 border-b border-elite-burgundy/20">
                    <h3 className="font-calistoga text-elite-burgundy text-lg font-bold mb-1">
                      {category.name} Types
                    </h3>
                    <p className="font-cabin text-elite-black/70 text-xs">
                      Choose your preference
                    </p>
                  </div>
                  
                  <div className="space-y-1">
                    {category.subCategories.map((sub, index) => (
                      <div key={sub.id}>
                        <Link
                          href={`/menu/${category.id}/${sub.id}`}
                          className={`group sidebar-item block p-3 rounded-xl transition-all duration-300 border ${
                            subCategoryId === sub.id
                              ? 'bg-elite-burgundy text-elite-cream shadow-lg border-elite-burgundy'
                              : 'bg-white text-elite-black hover:bg-elite-burgundy hover:text-elite-cream hover:shadow-lg hover:scale-102 border-elite-burgundy/20 hover:border-elite-burgundy'
                          }`}
                          prefetch={true}
                        >
                          <div className="flex items-center justify-between mb-1">
                            <div className="flex items-center gap-2">
                              <div className={`w-1.5 h-1.5 rounded-full transition-all duration-300 ${
                                subCategoryId === sub.id ? 'bg-elite-cream' : 'bg-elite-burgundy group-hover:bg-elite-cream'
                              }`}></div>
                              <span className="font-cabin font-medium text-sm">{sub.name}</span>
                            </div>
                            <span className="text-xs opacity-75 bg-white/20 px-2 py-0.5 rounded-full">
                              {sub.items.length} items
                            </span>
                          </div>
                          <p className="text-xs opacity-75 ml-3.5">
                            {sub.description}
                          </p>
                        </Link>
                        {index < category.subCategories.length - 1 && (
                          <div className="h-px bg-elite-burgundy/10 my-3"></div>
                        )}
                      </div>
                    ))}
                  </div>
                </div>
              )}

              {/* Sidebar Footer */}
              <div className="pt-4 border-t border-elite-burgundy/20">
                <div className="text-center">
                  <p className="font-cabin text-elite-black/40 text-xs">
                    Fresh ingredients daily
                  </p>
                </div>
              </div>
            </div>
          </div>

          {/* Right Side Content */}
          <div className="flex-1">
            {/* Items Grid with Circular Base Effect */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {subCategory.items.map((item) => (
                <DrinkCard
                  key={item.id}
                  image={item.images[0]}
                  name={item.name}
                  price={`${item.price} EGP`}
                  description={item.description}
                  size="large"
                  href={`/menu/${category.id}/${subCategory.id}/${item.id}`}
                />
              ))}
            </div>

            {/* Empty State */}
            {subCategory.items.length === 0 && (
              <div className="text-center py-16">
                <div className="bg-white rounded-2xl shadow-xl p-12">
                  <div className="text-6xl mb-6">â˜•</div>
                  <h3 className="font-calistoga text-elite-burgundy text-2xl mb-4">
                    No Items Available
                  </h3>
                  <p className="font-cabin text-elite-black text-lg mb-8">
                    We're currently updating our {subCategory.name.toLowerCase()} selection. 
                    Please check back soon!
                  </p>
                  <Link
                    href={`/menu/${category.id}`}
                    className="inline-flex items-center gap-2 bg-elite-burgundy text-elite-cream px-8 py-4 rounded-full font-cabin font-semibold transition-all duration-300 hover:bg-elite-dark-burgundy hover:scale-105"
                    prefetch={true}
                  >
                    <ChevronLeft className="w-4 h-4" />
                    Back to {category.name}
                  </Link>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
      </div>
      <Footer />
    </main>
  );
} 